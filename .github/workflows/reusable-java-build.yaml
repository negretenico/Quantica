name: Build and Push Java (Maven) to Github Packages
on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name for the uploaded artifact'
        required: false
        type: string
        default: 'build-artifact'
      working_directory:
        description: 'Directory containing the Maven project'
        required: true
        type: string
      java_version:
        description: 'Java version to use'
        required: false
        type: string
        default: '21'
      skip_tests:
        description: 'Skip tests during build'
        required: false
        type: boolean
        default: false

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: ${{ inputs.working_directory }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test with Maven
        if: ${{ !inputs.skip_tests }}
        working-directory: ${{ inputs.working_directory }}
        run: mvn test

      - name: Deploy JAR to GitHub Packages
        working-directory: ${{ inputs.working_directory }}
        run: mvn deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find built JAR
        id: find_jar
        working-directory: ${{ inputs.working_directory }}
        run: |
          JAR_PATH=$(ls target/*.jar 2>/dev/null | head -n1)
          if [ -z "$JAR_PATH" ]; then
          echo "No JAR found!"
          exit 1
          fi
          echo "jar_path=$JAR_PATH" >> "$GITHUB_OUTPUT"
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{inputs.artifact_name}}
          path: ${{ inputs.working_directory }}/${{ steps.find_jar.outputs.jar_path }}
